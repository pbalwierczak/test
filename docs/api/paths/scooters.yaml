get:
  summary: List Scooters
  description: |
    Retrieves a list of scooters with optional filtering by status and geographic bounds.
    Supports pagination and geographic filtering.
  operationId: getScooters
  tags:
    - Scooters
  parameters:
    - name: status
      in: query
      description: Filter scooters by status
      required: false
      schema:
        type: string
        enum: [available, occupied, maintenance, offline]
    - name: min_lat
      in: query
      description: Minimum latitude for geographic filtering
      required: false
      schema:
        type: number
        format: float
        minimum: -90
        maximum: 90
    - name: max_lat
      in: query
      description: Maximum latitude for geographic filtering
      required: false
      schema:
        type: number
        format: float
        minimum: -90
        maximum: 90
    - name: min_lng
      in: query
      description: Minimum longitude for geographic filtering
      required: false
      schema:
        type: number
        format: float
        minimum: -180
        maximum: 180
    - name: max_lng
      in: query
      description: Maximum longitude for geographic filtering
      required: false
      schema:
        type: number
        format: float
        minimum: -180
        maximum: 180
    - name: limit
      in: query
      description: Maximum number of scooters to return
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 50
    - name: offset
      in: query
      description: Number of scooters to skip for pagination
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
  responses:
    '200':
      description: List of scooters retrieved successfully
      content:
        application/json:
          schema:
            $ref: '../components/schemas.yaml#/ScooterListResponse'
    '400':
      description: Bad request - invalid query parameters
      content:
        application/json:
          schema:
            $ref: '../components/schemas.yaml#/ValidationErrorResponse'
          examples:
            invalid_coordinates:
              summary: Invalid latitude/longitude values
              value:
                error: "validation_error"
                message: "Request validation failed"
                code: 400
                timestamp: "2024-01-15T14:30:00Z"
                request_id: "req_1234567890abcdef"
                details:
                  field_errors:
                    - field: "min_lat"
                      message: "latitude must be between -90 and 90"
                      value: "95.5"
                    - field: "max_lng"
                      message: "longitude must be between -180 and 180"
                      value: "185.0"
            invalid_pagination:
              summary: Invalid pagination parameters
              value:
                error: "validation_error"
                message: "Request validation failed"
                code: 400
                timestamp: "2024-01-15T14:30:00Z"
                request_id: "req_1234567890abcdef"
                details:
                  field_errors:
                    - field: "limit"
                      message: "limit must be between 1 and 100"
                      value: "150"
                    - field: "offset"
                      message: "offset must be a non-negative integer"
                      value: "-5"
    '401':
      description: Unauthorized - invalid or missing API key
      content:
        application/json:
          schema:
            $ref: '../components/schemas.yaml#/AuthErrorResponse'
          examples:
            missing_api_key:
              summary: Missing API key
              value:
                error: "unauthorized"
                message: "Invalid or missing API key"
                code: 401
                timestamp: "2024-01-15T14:30:00Z"
                request_id: "req_1234567890abcdef"
                details:
                  reason: "missing_api_key"
                  hint: "Include 'Authorization: Bearer YOUR_API_KEY' header"
            invalid_api_key:
              summary: Invalid API key
              value:
                error: "unauthorized"
                message: "Invalid or missing API key"
                code: 401
                timestamp: "2024-01-15T14:30:00Z"
                request_id: "req_1234567890abcdef"
                details:
                  reason: "invalid_api_key"
                  hint: "Check your API key and try again"
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '../components/schemas.yaml#/InternalErrorResponse'
          examples:
            database_error:
              summary: Database connection error
              value:
                error: "internal_error"
                message: "An unexpected error occurred"
                code: 500
                timestamp: "2024-01-15T14:30:00Z"
                request_id: "req_1234567890abcdef"
                details:
                  error_id: "err_db_conn_failed_abc123"
                  suggestion: "Please try again later or contact support if the problem persists"
