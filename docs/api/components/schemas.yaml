# Error Response
ErrorResponse:
  type: object
  properties:
    error:
      type: string
      description: Error message
    message:
      type: string
      description: Additional error details
    code:
      type: integer
      description: HTTP status code
    details:
      type: object
      description: Additional error information
  required:
    - error

# Health Check Response
HealthResponse:
  type: object
  properties:
    status:
      type: string
      example: "healthy"
    service:
      type: string
      example: "scootin-aboot"
  required:
    - status
    - service

# Location Schema
Location:
  type: object
  properties:
    latitude:
      type: number
      format: float
      minimum: -90
      maximum: 90
      description: Latitude coordinate
    longitude:
      type: number
      format: float
      minimum: -180
      maximum: 180
      description: Longitude coordinate
  required:
    - latitude
    - longitude

# Scooter Schemas
ScooterInfo:
  type: object
  properties:
    id:
      type: string
      format: uuid
      description: Unique identifier of the scooter
    status:
      type: string
      enum: [available, occupied, maintenance, offline]
      description: Current status of the scooter
    current_latitude:
      type: number
      format: float
      minimum: -90
      maximum: 90
      description: Current latitude of the scooter
    current_longitude:
      type: number
      format: float
      minimum: -180
      maximum: 180
      description: Current longitude of the scooter
    last_seen:
      type: string
      format: date-time
      description: Timestamp when the scooter was last seen
    created_at:
      type: string
      format: date-time
      description: Timestamp when the scooter was created
  required:
    - id
    - status
    - current_latitude
    - current_longitude
    - last_seen
    - created_at

ScooterDetailsResponse:
  allOf:
    - $ref: '#/ScooterInfo'
    - type: object
      properties:
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the scooter was last updated
        active_trip:
          $ref: '#/TripInfo'
          description: Active trip information if scooter is occupied
      required:
        - updated_at

ScooterListResponse:
  type: object
  properties:
    scooters:
      type: array
      items:
        $ref: '#/ScooterInfo'
      description: List of scooters
    total:
      type: integer
      format: int64
      description: Total number of scooters matching the query
    limit:
      type: integer
      description: Maximum number of scooters returned
    offset:
      type: integer
      description: Number of scooters skipped
  required:
    - scooters
    - total
    - limit
    - offset

ScooterWithDistance:
  allOf:
    - $ref: '#/ScooterInfo'
    - type: object
      properties:
        distance_meters:
          type: number
          format: float
          description: Distance from the search center in meters
      required:
        - distance_meters

ClosestScootersResponse:
  type: object
  properties:
    scooters:
      type: array
      items:
        $ref: '#/ScooterWithDistance'
      description: List of scooters sorted by distance
    center:
      $ref: '#/Location'
      description: Center point of the search
    radius_meters:
      type: number
      format: float
      description: Search radius in meters
  required:
    - scooters
    - center
    - radius_meters

# Trip Schemas
StartTripRequest:
  type: object
  properties:
    user_id:
      type: string
      format: uuid
      description: Unique identifier of the user starting the trip
    start_latitude:
      type: number
      format: float
      minimum: -90
      maximum: 90
      description: Latitude where the trip starts
    start_longitude:
      type: number
      format: float
      minimum: -180
      maximum: 180
      description: Longitude where the trip starts
  required:
    - user_id
    - start_latitude
    - start_longitude

StartTripResponse:
  type: object
  properties:
    trip_id:
      type: string
      format: uuid
      description: Unique identifier of the created trip
    scooter_id:
      type: string
      format: uuid
      description: Unique identifier of the scooter
    user_id:
      type: string
      format: uuid
      description: Unique identifier of the user
    start_time:
      type: string
      format: date-time
      description: Timestamp when the trip started
    start_latitude:
      type: number
      format: float
      description: Latitude where the trip started
    start_longitude:
      type: number
      format: float
      description: Longitude where the trip started
    status:
      type: string
      enum: [active, completed, cancelled]
      description: Current status of the trip
  required:
    - trip_id
    - scooter_id
    - user_id
    - start_time
    - start_latitude
    - start_longitude
    - status

EndTripRequest:
  type: object
  properties:
    end_latitude:
      type: number
      format: float
      minimum: -90
      maximum: 90
      description: Latitude where the trip ends
    end_longitude:
      type: number
      format: float
      minimum: -180
      maximum: 180
      description: Longitude where the trip ends
  required:
    - end_latitude
    - end_longitude

EndTripResponse:
  type: object
  properties:
    trip_id:
      type: string
      format: uuid
      description: Unique identifier of the trip
    scooter_id:
      type: string
      format: uuid
      description: Unique identifier of the scooter
    user_id:
      type: string
      format: uuid
      description: Unique identifier of the user
    start_time:
      type: string
      format: date-time
      description: Timestamp when the trip started
    end_time:
      type: string
      format: date-time
      description: Timestamp when the trip ended
    start_latitude:
      type: number
      format: float
      description: Latitude where the trip started
    start_longitude:
      type: number
      format: float
      description: Longitude where the trip started
    end_latitude:
      type: number
      format: float
      description: Latitude where the trip ended
    end_longitude:
      type: number
      format: float
      description: Longitude where the trip ended
    status:
      type: string
      enum: [active, completed, cancelled]
      description: Final status of the trip
    duration_seconds:
      type: integer
      format: int64
      description: Trip duration in seconds
  required:
    - trip_id
    - scooter_id
    - user_id
    - start_time
    - end_time
    - start_latitude
    - start_longitude
    - end_latitude
    - end_longitude
    - status
    - duration_seconds

LocationUpdateRequest:
  type: object
  properties:
    latitude:
      type: number
      format: float
      minimum: -90
      maximum: 90
      description: New latitude of the scooter
    longitude:
      type: number
      format: float
      minimum: -180
      maximum: 180
      description: New longitude of the scooter
    timestamp:
      type: string
      format: date-time
      description: Timestamp of the location update
  required:
    - latitude
    - longitude
    - timestamp

LocationUpdateResponse:
  type: object
  properties:
    update_id:
      type: string
      format: uuid
      description: Unique identifier of the location update
    trip_id:
      type: string
      format: uuid
      description: Unique identifier of the active trip
    latitude:
      type: number
      format: float
      description: Updated latitude
    longitude:
      type: number
      format: float
      description: Updated longitude
    timestamp:
      type: string
      format: date-time
      description: Timestamp of the location update
  required:
    - update_id
    - latitude
    - longitude
    - timestamp

TripInfo:
  type: object
  properties:
    trip_id:
      type: string
      format: uuid
      description: Unique identifier of the trip
    user_id:
      type: string
      format: uuid
      description: Unique identifier of the user
    start_time:
      type: string
      format: date-time
      description: Timestamp when the trip started
    start_latitude:
      type: number
      format: float
      description: Latitude where the trip started
    start_longitude:
      type: number
      format: float
      description: Longitude where the trip started
  required:
    - trip_id
    - user_id
    - start_time
    - start_latitude
    - start_longitude
